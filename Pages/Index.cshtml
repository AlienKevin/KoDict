@page
@model IndexModel
@using Microsoft.AspNetCore.Html
@{
    ViewData["Title"] = "Home page";
}

<form>
    <p>
        <input type="text" asp-for="Word" />
        <input type="submit" value="Search" />
    </p>
</form>

@{
    if (Model.Entry != null)
    {
        var (DerivedPr, PrsExplanations) = Hangeul2Sounds.ToSounds(Model.Entry.Word);
        <span class="headline">@Model.Entry.Word</span>
        if (Model.Entry.Origin != "?") { <span>&nbsp;(@Model.Entry.Origin)</span> }
        if (Model.Entry.Prs.Count > 0) { <span>&nbsp;[@(String.Join(", ", Model.Entry.Prs))]</span> }
        <span>@Model.Entry.Pos</span><br>
        if (DerivedPr == Model.Entry.Prs[0])
        {
            var ArrowStyle = "font-size:1.5em; position:relative; bottom:-0.1em; line-height:1em; padding-left: 0.2em; padding-right: 0.2em;";
            if (PrsExplanations.Count > 0) {
                <span class="subtitle">Sound Changes</span>
            }
            if (PrsExplanations.Count == 1) {
                <p>@Model.Entry.Word<span style="@ArrowStyle">⇒</span>@(PrsExplanations.First().result)  @(PrsExplanations.First().rule)</p>
            } else if (PrsExplanations.Count > 1) {
                <ol>
                    @for (int i = 0; i < PrsExplanations.Count; i++)
                    {
                        var PrevResult = i == 0 ? Model.Entry.Word : PrsExplanations[i - 1].result;
                        var CurrResult = PrsExplanations[i].result;
                        var DiffMask = PrevResult.Zip(CurrResult, (PrevChar, CurrChar) => PrevChar != CurrChar);
                        IHtmlContent ShowResult(string Result)
                        {
                            var html = new HtmlContentBuilder();
                            foreach ((char Char, bool Diff) in Result.Zip(DiffMask, Tuple.Create))
                            {
                                html.AppendHtml(Diff ? $"<b>{Char.ToString()}</b>" : $"<span>{Char.ToString()}</span>");
                            }
                            return html;
                        }
                        <li>
                            @ShowResult(PrevResult)
                            <span style="@ArrowStyle">⇒</span>
                            @ShowResult(CurrResult)
                            &nbsp;&nbsp;@PrsExplanations[i].rule
                        </li>
                    }
                </ol>
            }
        }
        <span class="subtitle">Definitions</span>
        <ol>
            @foreach (Dict.Sense sense in Model.Entry.Senses)
            {
                <li>
                    <span>&nbsp;<b>@sense.EnglishLemma</b></span><br>
                    <span>&nbsp;@sense.EnglishDefinition</span>
                    <ul>
                        @foreach (Dict.Example example in sense.Examples)
                        {
                            if (example.Type != "Phrase")
                            {
                                <li><span>@example.Expr</span></li>
                            }
                        }
                    </ul>
                </li>
            }
        </ol>
    }
    else if (Model.Word?.Count() > 0)
    {
        <span>No entry found.</span>
    }
}
