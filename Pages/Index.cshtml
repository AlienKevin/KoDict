@page
@model IndexModel
@using Microsoft.AspNetCore.Html
@{
    ViewData["Title"] = "Home page";
}

<form>
    <p>
        <input type="text" asp-for="Word" />
        <input type="submit" value="Search" />
    </p>
</form>

@{
    void ShowEntry(Dict.Entry entry, int index, int total) {
        var (DerivedPr, PrsExplanations) = Hangeul2Sounds.ToSounds(entry.Word);
        <span class="headline" id="entry-@index">@entry.Word</span>
        if (total > 1)
        {
            <span class="badge text-dark bg-light">@index of @total</span>
        }
        if (entry.Origin != "?") { <span>&nbsp;(@entry.Origin)</span> }
        if (entry.Prs.Count > 0) { <span>&nbsp;[@(String.Join(", ", entry.Prs))]</span> }
        <span>@entry.Pos</span><br>
        if (entry.Prs.Count() > 0 && DerivedPr == entry.Prs[0])
        {
            var ArrowStyle = "font-size:1.5em; position:relative; bottom:-0.1em; line-height:1em; padding-left: 0.2em; padding-right: 0.2em;";
            if (PrsExplanations.Count > 0) {
                <span class="subtitle">Sound Changes</span>
            }
            if (PrsExplanations.Count == 1) {
                <p>@entry.Word<span style="@ArrowStyle">⇒</span>@(PrsExplanations.First().result)  @(PrsExplanations.First().rule)</p>
            } else if (PrsExplanations.Count > 1) {
                <ol>
                    @for (int i = 0; i < PrsExplanations.Count; i++)
                    {
                        var PrevResult = i == 0 ? entry.Word : PrsExplanations[i - 1].result;
                        var CurrResult = PrsExplanations[i].result;
                        var DiffMask = PrevResult.Zip(CurrResult, (PrevChar, CurrChar) => PrevChar != CurrChar);
                        IHtmlContent ShowResult(string Result)
                        {
                            var html = new HtmlContentBuilder();
                            foreach ((char Char, bool Diff) in Result.Zip(DiffMask, Tuple.Create))
                            {
                                html.AppendHtml(Diff ? $"<b>{Char.ToString()}</b>" : $"<span>{Char.ToString()}</span>");
                            }
                            return html;
                        }
                        <li>
                            @ShowResult(PrevResult)
                            <span style="@ArrowStyle">⇒</span>
                            @ShowResult(CurrResult)
                            &nbsp;&nbsp;@PrsExplanations[i].rule
                        </li>
                    }
                </ol>
            }
        }
        <span class="subtitle">Definitions</span>
        <ol>
            @foreach (Dict.Sense sense in entry.Senses)
            {
                <li>
                    <span>&nbsp;<b>@sense.EnglishLemma</b></span><br>
                    <span>&nbsp;@sense.EnglishDefinition</span>
                    <ul>
                        @foreach (Dict.Example example in sense.Examples)
                        {
                            if (example.Type != "Phrase")
                            {
                                <li><span>@example.Expr</span></li>
                            }
                        }
                    </ul>
                </li>
            }
        </ol>
    }

    void ShowEntryGroup(string word)
    {
        var entries = Model.GetEntryGroup(word);
        foreach (var entry in entries)
        {
            ShowEntry(entry, entry.Index + 1, entries.Count);
        }
    }
}

@if (Model.MatchedEntries != null) {
    if (Model.MatchedEntries.GetEntries().Count() == 1)
    {
        ShowEntryGroup(Model.MatchedEntries.GetEntries().First().Word);
    }
    else if (Model.Index != null)
    {
        ShowEntryGroup(Model.MatchedEntries.GetEntries()[Model.Index - 1 ?? default(int)].Word);
        if (Model.Index > 1)
        {
            <script type="text/javascript">
                document.getElementById("entry-@Model.Index").scrollIntoView();
            </script>
        }
    }
    else if (Model.MatchedEntries.GetEntries().Count() > 1)
    {
        <div class="list-group">
            @foreach (var it in Model.MatchedEntries.GetEntries().Select((e, i) => new { Entry = e, Index = i }))
            {
                var entry = it.Entry;
                var i = it.Index + 1;
                var label = entry.Word + (entry.Origin != "?" ? (" (" + entry.Origin + ")") : "") +
                    (entry.Senses.Count() > 0 ? " " + entry.Senses.First().EnglishLemma : "");
                <form>
                    <input type="hidden" asp-for="Word" value="@entry.Word"/>
                    @if (Model.MatchedEntries.IsExact())
                    {
                        <input type="hidden" asp-for="Index" value="@i"/>
                    }
                    <input class="list-group-item list-group-item-action" type="submit" value="@label"/>
                </form>
            }
        </div>
    }
    else if (Model.Word != null)
    {
        <span>No entry found.</span>
    }
}
